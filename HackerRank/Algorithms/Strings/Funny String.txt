//**

Problem Statement

Suppose you have a string S that has the length N. It is indexed from 0 to N−1. String R is the reverse of string S. The string S is funny if the condition |Si−Si−1|=|Ri−Ri−1| is true for every i from 1 to N−1.

Note: Given a string str, stri denotes the ascii value of the ith character (0-indexed) of str. Here, |x| denotes the absolute value of an integer x.

Input Format

The first line of input will contain an integer T, the number of test cases. Each of the next T lines contains one string S.

Constraints

1⩽T⩽10
2⩽length of S⩽10000
Output Format

For each string, print Funny or Not Funny on separate lines.

Sample Input

2
acxz
bcxz
Sample Output

Funny
Not Funny
Explanation

Consider the 1st test case: acxz

Here:

|c-a| = |x-z| = 2
|x-c| = |c-x| = 21
|z-x| = |a-c| = 2
Hence, the string is Funny.

Consider the 2nd test case: bcxz

Here:

|c-b| != |x-z|
Hence, the string is Not Funny.


**//

//Solution

#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int funnyString(char *s){
   
    int length=strlen(s);
    int x=length-1;
    for(int i=1;i<length-1;i++){
        if(abs(s[i]-s[i-1])!=abs(s[x]-s[x-1])){
            return 0;
        }
        x--;
    }
    return 1;
}


int main() {

    /* Enter your code here. Read input from STDIN. Print output to STDOUT */    
    int t;
    scanf("%d",&t);
    for(int i=0;i<t;i++){
        char s[10000];
        scanf("%s",s);
        int check=funnyString(s);
        if(check==1)
            printf("Funny\n");
        else
            printf("Not Funny\n");
    }            
    return 0;
}
